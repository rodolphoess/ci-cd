image: docker:stable

stages:
- pre-build
- build
- test
- deploy


build-docker:
  services:
  - docker:dind #Serviço para executar o docker dentro de uma imagem docker.

  before_script:
  - docker info #Pra garantir que o docker está executando, antes de qualquer script será executado esse comando docker.
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD #Executa o login no Docker Hub pegando as variáveis de CI_REGISTRY_USER e CI_REGISTRY_PASSWORD de Settings -> CI/CD -> Variables, que foram previamente criadas lá.

  stage: pre-build
  script:
    - docker build -t minha-imagem . #Comando para construção da imagem minha-imagem com tag baseada na docker:stable
    - docker tag minha-imagem rodolphoerick/minha-imagem:latest #Comando para criar uma tag para subir no repositório do Docker Hub
    - docker push rodolphoerick/minha-imagem:latest #Comando para realizar o push da tag no Docker Hub


build-project:
  image: rodolphoerick/minha-imagem:latest
  services:
  - docker:dind
  - mysql:5.7
  variables:
    MYSQL_USER: devops_dev
    MYSQL_PASSWORD: mestre
    MYSQL_DATABASE: todo_dev
    MYSQL_ROOT_PASSWORD: senha

    DB_NAME: 'todo_dev'
    DB_USER: 'devops_dev'
    DB_PASSWORD: 'mestre'
    DB_HOST: 'mysql'
    DB_PORT: '3306'
    SECRET_KEY: 'r*5ltfzw-61ksdm41fuul8+hxs$86yo9%k1%k=(!@=-wv4qtyv'

  stage: build
  tags:
  - executor-tarefas
  dependencies:
  - build-docker
  script:
  - python manage.py makemigrations
  - python manage.py migrate
